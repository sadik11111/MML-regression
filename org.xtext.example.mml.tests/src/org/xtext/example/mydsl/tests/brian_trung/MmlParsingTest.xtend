/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.tests.brian_trung

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.mydsl.mml.MMLModel
import org.xtext.example.mydsl.tests.MmlInjectorProvider

@ExtendWith(InjectionExtension)
@InjectWith(MmlInjectorProvider)
class MmlParsingTest {
	@Inject
	ParseHelper<MMLModel> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			datainput "foo.csv"
				mlframework scikit-learn
				algorithm DT
				TrainingTest { 
					percentageTraining 70
				}
				mean_absolute_error
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
		
		Assertions.assertEquals("foo.csv", result.input.filelocation)
	}
}
